// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: leath.proto

#ifndef PROTOBUF_leath_2eproto__INCLUDED
#define PROTOBUF_leath_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)

namespace mpc {
namespace leath {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_leath_2eproto();
void protobuf_AssignDesc_leath_2eproto();
void protobuf_ShutdownFile_leath_2eproto();

class ReconstructRangeMessage;
class ReconstructReply;
class ReconstructRequestMessage;
class SetupMessage;
class ShareRequestMessage;
class batchShareReply;

// ===================================================================

class SetupMessage : public ::google::protobuf::Message {
 public:
  SetupMessage();
  virtual ~SetupMessage();

  SetupMessage(const SetupMessage& from);

  inline SetupMessage& operator=(const SetupMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetupMessage& default_instance();

  void Swap(SetupMessage* other);

  // implements Message ----------------------------------------------

  inline SetupMessage* New() const { return New(NULL); }

  SetupMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetupMessage& from);
  void MergeFrom(const SetupMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SetupMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 msg_id = 1;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 1;
  ::google::protobuf::uint64 msg_id() const;
  void set_msg_id(::google::protobuf::uint64 value);

  // optional bytes msg = 2;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const void* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:mpc.leath.SetupMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 msg_id_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_leath_2eproto();
  friend void protobuf_AssignDesc_leath_2eproto();
  friend void protobuf_ShutdownFile_leath_2eproto();

  void InitAsDefaultInstance();
  static SetupMessage* default_instance_;
};
// -------------------------------------------------------------------

class ShareRequestMessage : public ::google::protobuf::Message {
 public:
  ShareRequestMessage();
  virtual ~ShareRequestMessage();

  ShareRequestMessage(const ShareRequestMessage& from);

  inline ShareRequestMessage& operator=(const ShareRequestMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShareRequestMessage& default_instance();

  void Swap(ShareRequestMessage* other);

  // implements Message ----------------------------------------------

  inline ShareRequestMessage* New() const { return New(NULL); }

  ShareRequestMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShareRequestMessage& from);
  void MergeFrom(const ShareRequestMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ShareRequestMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 value_id = 1;
  void clear_value_id();
  static const int kValueIdFieldNumber = 1;
  ::google::protobuf::uint64 value_id() const;
  void set_value_id(::google::protobuf::uint64 value);

  // optional bytes value_share = 2;
  void clear_value_share();
  static const int kValueShareFieldNumber = 2;
  const ::std::string& value_share() const;
  void set_value_share(const ::std::string& value);
  void set_value_share(const char* value);
  void set_value_share(const void* value, size_t size);
  ::std::string* mutable_value_share();
  ::std::string* release_value_share();
  void set_allocated_value_share(::std::string* value_share);

  // optional bytes mac_share = 3;
  void clear_mac_share();
  static const int kMacShareFieldNumber = 3;
  const ::std::string& mac_share() const;
  void set_mac_share(const ::std::string& value);
  void set_mac_share(const char* value);
  void set_mac_share(const void* value, size_t size);
  ::std::string* mutable_mac_share();
  ::std::string* release_mac_share();
  void set_allocated_mac_share(::std::string* mac_share);

  // @@protoc_insertion_point(class_scope:mpc.leath.ShareRequestMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 value_id_;
  ::google::protobuf::internal::ArenaStringPtr value_share_;
  ::google::protobuf::internal::ArenaStringPtr mac_share_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_leath_2eproto();
  friend void protobuf_AssignDesc_leath_2eproto();
  friend void protobuf_ShutdownFile_leath_2eproto();

  void InitAsDefaultInstance();
  static ShareRequestMessage* default_instance_;
};
// -------------------------------------------------------------------

class batchShareReply : public ::google::protobuf::Message {
 public:
  batchShareReply();
  virtual ~batchShareReply();

  batchShareReply(const batchShareReply& from);

  inline batchShareReply& operator=(const batchShareReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const batchShareReply& default_instance();

  void Swap(batchShareReply* other);

  // implements Message ----------------------------------------------

  inline batchShareReply* New() const { return New(NULL); }

  batchShareReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const batchShareReply& from);
  void MergeFrom(const batchShareReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(batchShareReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 counter = 1;
  void clear_counter();
  static const int kCounterFieldNumber = 1;
  ::google::protobuf::uint64 counter() const;
  void set_counter(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:mpc.leath.batchShareReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 counter_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_leath_2eproto();
  friend void protobuf_AssignDesc_leath_2eproto();
  friend void protobuf_ShutdownFile_leath_2eproto();

  void InitAsDefaultInstance();
  static batchShareReply* default_instance_;
};
// -------------------------------------------------------------------

class ReconstructRequestMessage : public ::google::protobuf::Message {
 public:
  ReconstructRequestMessage();
  virtual ~ReconstructRequestMessage();

  ReconstructRequestMessage(const ReconstructRequestMessage& from);

  inline ReconstructRequestMessage& operator=(const ReconstructRequestMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReconstructRequestMessage& default_instance();

  void Swap(ReconstructRequestMessage* other);

  // implements Message ----------------------------------------------

  inline ReconstructRequestMessage* New() const { return New(NULL); }

  ReconstructRequestMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReconstructRequestMessage& from);
  void MergeFrom(const ReconstructRequestMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReconstructRequestMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 value_id = 1;
  void clear_value_id();
  static const int kValueIdFieldNumber = 1;
  ::google::protobuf::uint64 value_id() const;
  void set_value_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:mpc.leath.ReconstructRequestMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 value_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_leath_2eproto();
  friend void protobuf_AssignDesc_leath_2eproto();
  friend void protobuf_ShutdownFile_leath_2eproto();

  void InitAsDefaultInstance();
  static ReconstructRequestMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReconstructRangeMessage : public ::google::protobuf::Message {
 public:
  ReconstructRangeMessage();
  virtual ~ReconstructRangeMessage();

  ReconstructRangeMessage(const ReconstructRangeMessage& from);

  inline ReconstructRangeMessage& operator=(const ReconstructRangeMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReconstructRangeMessage& default_instance();

  void Swap(ReconstructRangeMessage* other);

  // implements Message ----------------------------------------------

  inline ReconstructRangeMessage* New() const { return New(NULL); }

  ReconstructRangeMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReconstructRangeMessage& from);
  void MergeFrom(const ReconstructRangeMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReconstructRangeMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 begin_id = 1;
  void clear_begin_id();
  static const int kBeginIdFieldNumber = 1;
  ::google::protobuf::uint64 begin_id() const;
  void set_begin_id(::google::protobuf::uint64 value);

  // optional uint64 end_id = 2;
  void clear_end_id();
  static const int kEndIdFieldNumber = 2;
  ::google::protobuf::uint64 end_id() const;
  void set_end_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:mpc.leath.ReconstructRangeMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 begin_id_;
  ::google::protobuf::uint64 end_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_leath_2eproto();
  friend void protobuf_AssignDesc_leath_2eproto();
  friend void protobuf_ShutdownFile_leath_2eproto();

  void InitAsDefaultInstance();
  static ReconstructRangeMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReconstructReply : public ::google::protobuf::Message {
 public:
  ReconstructReply();
  virtual ~ReconstructReply();

  ReconstructReply(const ReconstructReply& from);

  inline ReconstructReply& operator=(const ReconstructReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReconstructReply& default_instance();

  void Swap(ReconstructReply* other);

  // implements Message ----------------------------------------------

  inline ReconstructReply* New() const { return New(NULL); }

  ReconstructReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReconstructReply& from);
  void MergeFrom(const ReconstructReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReconstructReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 value_id = 1;
  void clear_value_id();
  static const int kValueIdFieldNumber = 1;
  ::google::protobuf::uint64 value_id() const;
  void set_value_id(::google::protobuf::uint64 value);

  // optional bytes value_share = 2;
  void clear_value_share();
  static const int kValueShareFieldNumber = 2;
  const ::std::string& value_share() const;
  void set_value_share(const ::std::string& value);
  void set_value_share(const char* value);
  void set_value_share(const void* value, size_t size);
  ::std::string* mutable_value_share();
  ::std::string* release_value_share();
  void set_allocated_value_share(::std::string* value_share);

  // optional bytes mac_share = 3;
  void clear_mac_share();
  static const int kMacShareFieldNumber = 3;
  const ::std::string& mac_share() const;
  void set_mac_share(const ::std::string& value);
  void set_mac_share(const char* value);
  void set_mac_share(const void* value, size_t size);
  ::std::string* mutable_mac_share();
  ::std::string* release_mac_share();
  void set_allocated_mac_share(::std::string* mac_share);

  // @@protoc_insertion_point(class_scope:mpc.leath.ReconstructReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 value_id_;
  ::google::protobuf::internal::ArenaStringPtr value_share_;
  ::google::protobuf::internal::ArenaStringPtr mac_share_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_leath_2eproto();
  friend void protobuf_AssignDesc_leath_2eproto();
  friend void protobuf_ShutdownFile_leath_2eproto();

  void InitAsDefaultInstance();
  static ReconstructReply* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SetupMessage

// optional uint64 msg_id = 1;
inline void SetupMessage::clear_msg_id() {
  msg_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SetupMessage::msg_id() const {
  // @@protoc_insertion_point(field_get:mpc.leath.SetupMessage.msg_id)
  return msg_id_;
}
inline void SetupMessage::set_msg_id(::google::protobuf::uint64 value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:mpc.leath.SetupMessage.msg_id)
}

// optional bytes msg = 2;
inline void SetupMessage::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetupMessage::msg() const {
  // @@protoc_insertion_point(field_get:mpc.leath.SetupMessage.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetupMessage::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mpc.leath.SetupMessage.msg)
}
inline void SetupMessage::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mpc.leath.SetupMessage.msg)
}
inline void SetupMessage::set_msg(const void* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mpc.leath.SetupMessage.msg)
}
inline ::std::string* SetupMessage::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:mpc.leath.SetupMessage.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetupMessage::release_msg() {
  // @@protoc_insertion_point(field_release:mpc.leath.SetupMessage.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetupMessage::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:mpc.leath.SetupMessage.msg)
}

// -------------------------------------------------------------------

// ShareRequestMessage

// optional uint64 value_id = 1;
inline void ShareRequestMessage::clear_value_id() {
  value_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ShareRequestMessage::value_id() const {
  // @@protoc_insertion_point(field_get:mpc.leath.ShareRequestMessage.value_id)
  return value_id_;
}
inline void ShareRequestMessage::set_value_id(::google::protobuf::uint64 value) {
  
  value_id_ = value;
  // @@protoc_insertion_point(field_set:mpc.leath.ShareRequestMessage.value_id)
}

// optional bytes value_share = 2;
inline void ShareRequestMessage::clear_value_share() {
  value_share_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShareRequestMessage::value_share() const {
  // @@protoc_insertion_point(field_get:mpc.leath.ShareRequestMessage.value_share)
  return value_share_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShareRequestMessage::set_value_share(const ::std::string& value) {
  
  value_share_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mpc.leath.ShareRequestMessage.value_share)
}
inline void ShareRequestMessage::set_value_share(const char* value) {
  
  value_share_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mpc.leath.ShareRequestMessage.value_share)
}
inline void ShareRequestMessage::set_value_share(const void* value, size_t size) {
  
  value_share_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mpc.leath.ShareRequestMessage.value_share)
}
inline ::std::string* ShareRequestMessage::mutable_value_share() {
  
  // @@protoc_insertion_point(field_mutable:mpc.leath.ShareRequestMessage.value_share)
  return value_share_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShareRequestMessage::release_value_share() {
  // @@protoc_insertion_point(field_release:mpc.leath.ShareRequestMessage.value_share)
  
  return value_share_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShareRequestMessage::set_allocated_value_share(::std::string* value_share) {
  if (value_share != NULL) {
    
  } else {
    
  }
  value_share_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value_share);
  // @@protoc_insertion_point(field_set_allocated:mpc.leath.ShareRequestMessage.value_share)
}

// optional bytes mac_share = 3;
inline void ShareRequestMessage::clear_mac_share() {
  mac_share_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShareRequestMessage::mac_share() const {
  // @@protoc_insertion_point(field_get:mpc.leath.ShareRequestMessage.mac_share)
  return mac_share_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShareRequestMessage::set_mac_share(const ::std::string& value) {
  
  mac_share_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mpc.leath.ShareRequestMessage.mac_share)
}
inline void ShareRequestMessage::set_mac_share(const char* value) {
  
  mac_share_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mpc.leath.ShareRequestMessage.mac_share)
}
inline void ShareRequestMessage::set_mac_share(const void* value, size_t size) {
  
  mac_share_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mpc.leath.ShareRequestMessage.mac_share)
}
inline ::std::string* ShareRequestMessage::mutable_mac_share() {
  
  // @@protoc_insertion_point(field_mutable:mpc.leath.ShareRequestMessage.mac_share)
  return mac_share_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShareRequestMessage::release_mac_share() {
  // @@protoc_insertion_point(field_release:mpc.leath.ShareRequestMessage.mac_share)
  
  return mac_share_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShareRequestMessage::set_allocated_mac_share(::std::string* mac_share) {
  if (mac_share != NULL) {
    
  } else {
    
  }
  mac_share_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac_share);
  // @@protoc_insertion_point(field_set_allocated:mpc.leath.ShareRequestMessage.mac_share)
}

// -------------------------------------------------------------------

// batchShareReply

// optional uint64 counter = 1;
inline void batchShareReply::clear_counter() {
  counter_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 batchShareReply::counter() const {
  // @@protoc_insertion_point(field_get:mpc.leath.batchShareReply.counter)
  return counter_;
}
inline void batchShareReply::set_counter(::google::protobuf::uint64 value) {
  
  counter_ = value;
  // @@protoc_insertion_point(field_set:mpc.leath.batchShareReply.counter)
}

// -------------------------------------------------------------------

// ReconstructRequestMessage

// optional uint64 value_id = 1;
inline void ReconstructRequestMessage::clear_value_id() {
  value_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReconstructRequestMessage::value_id() const {
  // @@protoc_insertion_point(field_get:mpc.leath.ReconstructRequestMessage.value_id)
  return value_id_;
}
inline void ReconstructRequestMessage::set_value_id(::google::protobuf::uint64 value) {
  
  value_id_ = value;
  // @@protoc_insertion_point(field_set:mpc.leath.ReconstructRequestMessage.value_id)
}

// -------------------------------------------------------------------

// ReconstructRangeMessage

// optional uint64 begin_id = 1;
inline void ReconstructRangeMessage::clear_begin_id() {
  begin_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReconstructRangeMessage::begin_id() const {
  // @@protoc_insertion_point(field_get:mpc.leath.ReconstructRangeMessage.begin_id)
  return begin_id_;
}
inline void ReconstructRangeMessage::set_begin_id(::google::protobuf::uint64 value) {
  
  begin_id_ = value;
  // @@protoc_insertion_point(field_set:mpc.leath.ReconstructRangeMessage.begin_id)
}

// optional uint64 end_id = 2;
inline void ReconstructRangeMessage::clear_end_id() {
  end_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReconstructRangeMessage::end_id() const {
  // @@protoc_insertion_point(field_get:mpc.leath.ReconstructRangeMessage.end_id)
  return end_id_;
}
inline void ReconstructRangeMessage::set_end_id(::google::protobuf::uint64 value) {
  
  end_id_ = value;
  // @@protoc_insertion_point(field_set:mpc.leath.ReconstructRangeMessage.end_id)
}

// -------------------------------------------------------------------

// ReconstructReply

// optional uint64 value_id = 1;
inline void ReconstructReply::clear_value_id() {
  value_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReconstructReply::value_id() const {
  // @@protoc_insertion_point(field_get:mpc.leath.ReconstructReply.value_id)
  return value_id_;
}
inline void ReconstructReply::set_value_id(::google::protobuf::uint64 value) {
  
  value_id_ = value;
  // @@protoc_insertion_point(field_set:mpc.leath.ReconstructReply.value_id)
}

// optional bytes value_share = 2;
inline void ReconstructReply::clear_value_share() {
  value_share_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReconstructReply::value_share() const {
  // @@protoc_insertion_point(field_get:mpc.leath.ReconstructReply.value_share)
  return value_share_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReconstructReply::set_value_share(const ::std::string& value) {
  
  value_share_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mpc.leath.ReconstructReply.value_share)
}
inline void ReconstructReply::set_value_share(const char* value) {
  
  value_share_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mpc.leath.ReconstructReply.value_share)
}
inline void ReconstructReply::set_value_share(const void* value, size_t size) {
  
  value_share_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mpc.leath.ReconstructReply.value_share)
}
inline ::std::string* ReconstructReply::mutable_value_share() {
  
  // @@protoc_insertion_point(field_mutable:mpc.leath.ReconstructReply.value_share)
  return value_share_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReconstructReply::release_value_share() {
  // @@protoc_insertion_point(field_release:mpc.leath.ReconstructReply.value_share)
  
  return value_share_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReconstructReply::set_allocated_value_share(::std::string* value_share) {
  if (value_share != NULL) {
    
  } else {
    
  }
  value_share_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value_share);
  // @@protoc_insertion_point(field_set_allocated:mpc.leath.ReconstructReply.value_share)
}

// optional bytes mac_share = 3;
inline void ReconstructReply::clear_mac_share() {
  mac_share_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReconstructReply::mac_share() const {
  // @@protoc_insertion_point(field_get:mpc.leath.ReconstructReply.mac_share)
  return mac_share_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReconstructReply::set_mac_share(const ::std::string& value) {
  
  mac_share_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mpc.leath.ReconstructReply.mac_share)
}
inline void ReconstructReply::set_mac_share(const char* value) {
  
  mac_share_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mpc.leath.ReconstructReply.mac_share)
}
inline void ReconstructReply::set_mac_share(const void* value, size_t size) {
  
  mac_share_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mpc.leath.ReconstructReply.mac_share)
}
inline ::std::string* ReconstructReply::mutable_mac_share() {
  
  // @@protoc_insertion_point(field_mutable:mpc.leath.ReconstructReply.mac_share)
  return mac_share_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReconstructReply::release_mac_share() {
  // @@protoc_insertion_point(field_release:mpc.leath.ReconstructReply.mac_share)
  
  return mac_share_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReconstructReply::set_allocated_mac_share(::std::string* mac_share) {
  if (mac_share != NULL) {
    
  } else {
    
  }
  mac_share_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac_share);
  // @@protoc_insertion_point(field_set_allocated:mpc.leath.ReconstructReply.mac_share)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace leath
}  // namespace mpc

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_leath_2eproto__INCLUDED
