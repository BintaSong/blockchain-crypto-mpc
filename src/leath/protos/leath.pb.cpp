// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: leath.proto

#include "leath.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace mpc {
namespace leath {
class SetupMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetupMessage> _instance;
} _SetupMessage_default_instance_;
class ShareRequestMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShareRequestMessage> _instance;
} _ShareRequestMessage_default_instance_;
class SearchReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchReply> _instance;
} _SearchReply_default_instance_;
class ReconstructRequestMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReconstructRequestMessage> _instance;
} _ReconstructRequestMessage_default_instance_;
class ReconstructReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReconstructReply> _instance;
} _ReconstructReply_default_instance_;
}  // namespace leath
}  // namespace mpc
static void InitDefaultsSetupMessage_leath_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mpc::leath::_SetupMessage_default_instance_;
    new (ptr) ::mpc::leath::SetupMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mpc::leath::SetupMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetupMessage_leath_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetupMessage_leath_2eproto}, {}};

static void InitDefaultsShareRequestMessage_leath_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mpc::leath::_ShareRequestMessage_default_instance_;
    new (ptr) ::mpc::leath::ShareRequestMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mpc::leath::ShareRequestMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ShareRequestMessage_leath_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsShareRequestMessage_leath_2eproto}, {}};

static void InitDefaultsSearchReply_leath_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mpc::leath::_SearchReply_default_instance_;
    new (ptr) ::mpc::leath::SearchReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mpc::leath::SearchReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SearchReply_leath_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSearchReply_leath_2eproto}, {}};

static void InitDefaultsReconstructRequestMessage_leath_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mpc::leath::_ReconstructRequestMessage_default_instance_;
    new (ptr) ::mpc::leath::ReconstructRequestMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mpc::leath::ReconstructRequestMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReconstructRequestMessage_leath_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReconstructRequestMessage_leath_2eproto}, {}};

static void InitDefaultsReconstructReply_leath_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mpc::leath::_ReconstructReply_default_instance_;
    new (ptr) ::mpc::leath::ReconstructReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mpc::leath::ReconstructReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReconstructReply_leath_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReconstructReply_leath_2eproto}, {}};

void InitDefaults_leath_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_SetupMessage_leath_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShareRequestMessage_leath_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SearchReply_leath_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReconstructRequestMessage_leath_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReconstructReply_leath_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_leath_2eproto[5];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_leath_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_leath_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_leath_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mpc::leath::SetupMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mpc::leath::SetupMessage, msg_id_),
  PROTOBUF_FIELD_OFFSET(::mpc::leath::SetupMessage, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mpc::leath::ShareRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mpc::leath::ShareRequestMessage, value_id_),
  PROTOBUF_FIELD_OFFSET(::mpc::leath::ShareRequestMessage, value_share_),
  PROTOBUF_FIELD_OFFSET(::mpc::leath::ShareRequestMessage, mac_share_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mpc::leath::SearchReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mpc::leath::SearchReply, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mpc::leath::ReconstructRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mpc::leath::ReconstructRequestMessage, value_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mpc::leath::ReconstructReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mpc::leath::ReconstructReply, value_id_),
  PROTOBUF_FIELD_OFFSET(::mpc::leath::ReconstructReply, value_share_),
  PROTOBUF_FIELD_OFFSET(::mpc::leath::ReconstructReply, mac_share_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mpc::leath::SetupMessage)},
  { 7, -1, sizeof(::mpc::leath::ShareRequestMessage)},
  { 15, -1, sizeof(::mpc::leath::SearchReply)},
  { 21, -1, sizeof(::mpc::leath::ReconstructRequestMessage)},
  { 27, -1, sizeof(::mpc::leath::ReconstructReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::mpc::leath::_SetupMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mpc::leath::_ShareRequestMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mpc::leath::_SearchReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mpc::leath::_ReconstructRequestMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mpc::leath::_ReconstructReply_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_leath_2eproto = {
  {}, AddDescriptors_leath_2eproto, "leath.proto", schemas,
  file_default_instances, TableStruct_leath_2eproto::offsets,
  file_level_metadata_leath_2eproto, 5, file_level_enum_descriptors_leath_2eproto, file_level_service_descriptors_leath_2eproto,
};

const char descriptor_table_protodef_leath_2eproto[] =
  "\n\013leath.proto\022\tmpc.leath\032\033google/protobu"
  "f/empty.proto\"+\n\014SetupMessage\022\016\n\006msg_id\030"
  "\001 \001(\004\022\013\n\003msg\030\002 \001(\014\"O\n\023ShareRequestMessag"
  "e\022\020\n\010value_id\030\001 \001(\004\022\023\n\013value_share\030\002 \001(\014"
  "\022\021\n\tmac_share\030\003 \001(\014\"\035\n\013SearchReply\022\016\n\006re"
  "sult\030\001 \001(\014\"-\n\031ReconstructRequestMessage\022"
  "\020\n\010value_id\030\001 \001(\004\"L\n\020ReconstructReply\022\020\n"
  "\010value_id\030\001 \001(\004\022\023\n\013value_share\030\002 \001(\014\022\021\n\t"
  "mac_share\030\003 \001(\0142\206\003\n\010LeathRPC\022;\n\005setup\022\027."
  "mpc.leath.SetupMessage\032\027.mpc.leath.Setup"
  "Message\"\000\022A\n\005share\022\036.mpc.leath.ShareRequ"
  "estMessage\032\026.google.protobuf.Empty\"\000\022I\n\013"
  "batch_share\022\036.mpc.leath.ShareRequestMess"
  "age\032\026.google.protobuf.Empty\"\000(\001\022R\n\013recon"
  "struct\022$.mpc.leath.ReconstructRequestMes"
  "sage\032\033.mpc.leath.ReconstructReply\"\000\022[\n\020b"
  "ulk_reconstruct\022$.mpc.leath.ReconstructR"
  "equestMessage\032\033.mpc.leath.ReconstructRep"
  "ly\"\000(\0010\001b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_leath_2eproto = {
  false, InitDefaults_leath_2eproto, 
  descriptor_table_protodef_leath_2eproto,
  "leath.proto", &assign_descriptors_table_leath_2eproto, 736,
};

void AddDescriptors_leath_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_google_2fprotobuf_2fempty_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_leath_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_leath_2eproto = []() { AddDescriptors_leath_2eproto(); return true; }();
namespace mpc {
namespace leath {

// ===================================================================

void SetupMessage::InitAsDefaultInstance() {
}
class SetupMessage::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetupMessage::kMsgIdFieldNumber;
const int SetupMessage::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetupMessage::SetupMessage()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mpc.leath.SetupMessage)
}
SetupMessage::SetupMessage(const SetupMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  msg_id_ = from.msg_id_;
  // @@protoc_insertion_point(copy_constructor:mpc.leath.SetupMessage)
}

void SetupMessage::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetupMessage_leath_2eproto.base);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_ = PROTOBUF_ULONGLONG(0);
}

SetupMessage::~SetupMessage() {
  // @@protoc_insertion_point(destructor:mpc.leath.SetupMessage)
  SharedDtor();
}

void SetupMessage::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetupMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetupMessage& SetupMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetupMessage_leath_2eproto.base);
  return *internal_default_instance();
}


void SetupMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:mpc.leath.SetupMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetupMessage::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetupMessage*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint64 msg_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_msg_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bytes msg = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_msg();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetupMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mpc.leath.SetupMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 msg_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mpc.leath.SetupMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mpc.leath.SetupMessage)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetupMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mpc.leath.SetupMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 msg_id = 1;
  if (this->msg_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->msg_id(), output);
  }

  // bytes msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mpc.leath.SetupMessage)
}

::google::protobuf::uint8* SetupMessage::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mpc.leath.SetupMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 msg_id = 1;
  if (this->msg_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->msg_id(), target);
  }

  // bytes msg = 2;
  if (this->msg().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mpc.leath.SetupMessage)
  return target;
}

size_t SetupMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mpc.leath.SetupMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msg());
  }

  // uint64 msg_id = 1;
  if (this->msg_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetupMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mpc.leath.SetupMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SetupMessage* source =
      ::google::protobuf::DynamicCastToGenerated<SetupMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mpc.leath.SetupMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mpc.leath.SetupMessage)
    MergeFrom(*source);
  }
}

void SetupMessage::MergeFrom(const SetupMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mpc.leath.SetupMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.msg_id() != 0) {
    set_msg_id(from.msg_id());
  }
}

void SetupMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mpc.leath.SetupMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetupMessage::CopyFrom(const SetupMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mpc.leath.SetupMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupMessage::IsInitialized() const {
  return true;
}

void SetupMessage::Swap(SetupMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetupMessage::InternalSwap(SetupMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msg_id_, other->msg_id_);
}

::google::protobuf::Metadata SetupMessage::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_leath_2eproto);
  return ::file_level_metadata_leath_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ShareRequestMessage::InitAsDefaultInstance() {
}
class ShareRequestMessage::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShareRequestMessage::kValueIdFieldNumber;
const int ShareRequestMessage::kValueShareFieldNumber;
const int ShareRequestMessage::kMacShareFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShareRequestMessage::ShareRequestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mpc.leath.ShareRequestMessage)
}
ShareRequestMessage::ShareRequestMessage(const ShareRequestMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_share_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value_share().size() > 0) {
    value_share_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_share_);
  }
  mac_share_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mac_share().size() > 0) {
    mac_share_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_share_);
  }
  value_id_ = from.value_id_;
  // @@protoc_insertion_point(copy_constructor:mpc.leath.ShareRequestMessage)
}

void ShareRequestMessage::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ShareRequestMessage_leath_2eproto.base);
  value_share_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_share_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_id_ = PROTOBUF_ULONGLONG(0);
}

ShareRequestMessage::~ShareRequestMessage() {
  // @@protoc_insertion_point(destructor:mpc.leath.ShareRequestMessage)
  SharedDtor();
}

void ShareRequestMessage::SharedDtor() {
  value_share_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_share_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShareRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShareRequestMessage& ShareRequestMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ShareRequestMessage_leath_2eproto.base);
  return *internal_default_instance();
}


void ShareRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:mpc.leath.ShareRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_share_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_share_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ShareRequestMessage::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ShareRequestMessage*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint64 value_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_value_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bytes value_share = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_value_share();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes mac_share = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_mac_share();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ShareRequestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mpc.leath.ShareRequestMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 value_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value_share = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value_share()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes mac_share = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mac_share()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mpc.leath.ShareRequestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mpc.leath.ShareRequestMessage)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ShareRequestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mpc.leath.ShareRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 value_id = 1;
  if (this->value_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->value_id(), output);
  }

  // bytes value_share = 2;
  if (this->value_share().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value_share(), output);
  }

  // bytes mac_share = 3;
  if (this->mac_share().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->mac_share(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mpc.leath.ShareRequestMessage)
}

::google::protobuf::uint8* ShareRequestMessage::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mpc.leath.ShareRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 value_id = 1;
  if (this->value_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->value_id(), target);
  }

  // bytes value_share = 2;
  if (this->value_share().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value_share(), target);
  }

  // bytes mac_share = 3;
  if (this->mac_share().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->mac_share(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mpc.leath.ShareRequestMessage)
  return target;
}

size_t ShareRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mpc.leath.ShareRequestMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes value_share = 2;
  if (this->value_share().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value_share());
  }

  // bytes mac_share = 3;
  if (this->mac_share().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mac_share());
  }

  // uint64 value_id = 1;
  if (this->value_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->value_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShareRequestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mpc.leath.ShareRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ShareRequestMessage* source =
      ::google::protobuf::DynamicCastToGenerated<ShareRequestMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mpc.leath.ShareRequestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mpc.leath.ShareRequestMessage)
    MergeFrom(*source);
  }
}

void ShareRequestMessage::MergeFrom(const ShareRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mpc.leath.ShareRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value_share().size() > 0) {

    value_share_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_share_);
  }
  if (from.mac_share().size() > 0) {

    mac_share_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_share_);
  }
  if (from.value_id() != 0) {
    set_value_id(from.value_id());
  }
}

void ShareRequestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mpc.leath.ShareRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShareRequestMessage::CopyFrom(const ShareRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mpc.leath.ShareRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareRequestMessage::IsInitialized() const {
  return true;
}

void ShareRequestMessage::Swap(ShareRequestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShareRequestMessage::InternalSwap(ShareRequestMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  value_share_.Swap(&other->value_share_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mac_share_.Swap(&other->mac_share_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_id_, other->value_id_);
}

::google::protobuf::Metadata ShareRequestMessage::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_leath_2eproto);
  return ::file_level_metadata_leath_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SearchReply::InitAsDefaultInstance() {
}
class SearchReply::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchReply::SearchReply()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mpc.leath.SearchReply)
}
SearchReply::SearchReply(const SearchReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.result().size() > 0) {
    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  // @@protoc_insertion_point(copy_constructor:mpc.leath.SearchReply)
}

void SearchReply::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SearchReply_leath_2eproto.base);
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SearchReply::~SearchReply() {
  // @@protoc_insertion_point(destructor:mpc.leath.SearchReply)
  SharedDtor();
}

void SearchReply::SharedDtor() {
  result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SearchReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SearchReply& SearchReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SearchReply_leath_2eproto.base);
  return *internal_default_instance();
}


void SearchReply::Clear() {
// @@protoc_insertion_point(message_clear_start:mpc.leath.SearchReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SearchReply::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SearchReply*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes result = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_result();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SearchReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mpc.leath.SearchReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mpc.leath.SearchReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mpc.leath.SearchReply)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SearchReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mpc.leath.SearchReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes result = 1;
  if (this->result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mpc.leath.SearchReply)
}

::google::protobuf::uint8* SearchReply::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mpc.leath.SearchReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes result = 1;
  if (this->result().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mpc.leath.SearchReply)
  return target;
}

size_t SearchReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mpc.leath.SearchReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mpc.leath.SearchReply)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchReply* source =
      ::google::protobuf::DynamicCastToGenerated<SearchReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mpc.leath.SearchReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mpc.leath.SearchReply)
    MergeFrom(*source);
  }
}

void SearchReply::MergeFrom(const SearchReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mpc.leath.SearchReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {

    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
}

void SearchReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mpc.leath.SearchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchReply::CopyFrom(const SearchReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mpc.leath.SearchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchReply::IsInitialized() const {
  return true;
}

void SearchReply::Swap(SearchReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchReply::InternalSwap(SearchReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata SearchReply::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_leath_2eproto);
  return ::file_level_metadata_leath_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReconstructRequestMessage::InitAsDefaultInstance() {
}
class ReconstructRequestMessage::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReconstructRequestMessage::kValueIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReconstructRequestMessage::ReconstructRequestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mpc.leath.ReconstructRequestMessage)
}
ReconstructRequestMessage::ReconstructRequestMessage(const ReconstructRequestMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_id_ = from.value_id_;
  // @@protoc_insertion_point(copy_constructor:mpc.leath.ReconstructRequestMessage)
}

void ReconstructRequestMessage::SharedCtor() {
  value_id_ = PROTOBUF_ULONGLONG(0);
}

ReconstructRequestMessage::~ReconstructRequestMessage() {
  // @@protoc_insertion_point(destructor:mpc.leath.ReconstructRequestMessage)
  SharedDtor();
}

void ReconstructRequestMessage::SharedDtor() {
}

void ReconstructRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReconstructRequestMessage& ReconstructRequestMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReconstructRequestMessage_leath_2eproto.base);
  return *internal_default_instance();
}


void ReconstructRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:mpc.leath.ReconstructRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReconstructRequestMessage::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReconstructRequestMessage*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint64 value_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_value_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReconstructRequestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mpc.leath.ReconstructRequestMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 value_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mpc.leath.ReconstructRequestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mpc.leath.ReconstructRequestMessage)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReconstructRequestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mpc.leath.ReconstructRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 value_id = 1;
  if (this->value_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->value_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mpc.leath.ReconstructRequestMessage)
}

::google::protobuf::uint8* ReconstructRequestMessage::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mpc.leath.ReconstructRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 value_id = 1;
  if (this->value_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->value_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mpc.leath.ReconstructRequestMessage)
  return target;
}

size_t ReconstructRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mpc.leath.ReconstructRequestMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 value_id = 1;
  if (this->value_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->value_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReconstructRequestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mpc.leath.ReconstructRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ReconstructRequestMessage* source =
      ::google::protobuf::DynamicCastToGenerated<ReconstructRequestMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mpc.leath.ReconstructRequestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mpc.leath.ReconstructRequestMessage)
    MergeFrom(*source);
  }
}

void ReconstructRequestMessage::MergeFrom(const ReconstructRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mpc.leath.ReconstructRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value_id() != 0) {
    set_value_id(from.value_id());
  }
}

void ReconstructRequestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mpc.leath.ReconstructRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReconstructRequestMessage::CopyFrom(const ReconstructRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mpc.leath.ReconstructRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReconstructRequestMessage::IsInitialized() const {
  return true;
}

void ReconstructRequestMessage::Swap(ReconstructRequestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReconstructRequestMessage::InternalSwap(ReconstructRequestMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_id_, other->value_id_);
}

::google::protobuf::Metadata ReconstructRequestMessage::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_leath_2eproto);
  return ::file_level_metadata_leath_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReconstructReply::InitAsDefaultInstance() {
}
class ReconstructReply::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReconstructReply::kValueIdFieldNumber;
const int ReconstructReply::kValueShareFieldNumber;
const int ReconstructReply::kMacShareFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReconstructReply::ReconstructReply()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mpc.leath.ReconstructReply)
}
ReconstructReply::ReconstructReply(const ReconstructReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_share_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value_share().size() > 0) {
    value_share_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_share_);
  }
  mac_share_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mac_share().size() > 0) {
    mac_share_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_share_);
  }
  value_id_ = from.value_id_;
  // @@protoc_insertion_point(copy_constructor:mpc.leath.ReconstructReply)
}

void ReconstructReply::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ReconstructReply_leath_2eproto.base);
  value_share_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_share_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_id_ = PROTOBUF_ULONGLONG(0);
}

ReconstructReply::~ReconstructReply() {
  // @@protoc_insertion_point(destructor:mpc.leath.ReconstructReply)
  SharedDtor();
}

void ReconstructReply::SharedDtor() {
  value_share_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_share_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReconstructReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReconstructReply& ReconstructReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReconstructReply_leath_2eproto.base);
  return *internal_default_instance();
}


void ReconstructReply::Clear() {
// @@protoc_insertion_point(message_clear_start:mpc.leath.ReconstructReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_share_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_share_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReconstructReply::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReconstructReply*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint64 value_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_value_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bytes value_share = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_value_share();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes mac_share = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_mac_share();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReconstructReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mpc.leath.ReconstructReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 value_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value_share = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value_share()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes mac_share = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mac_share()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mpc.leath.ReconstructReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mpc.leath.ReconstructReply)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReconstructReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mpc.leath.ReconstructReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 value_id = 1;
  if (this->value_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->value_id(), output);
  }

  // bytes value_share = 2;
  if (this->value_share().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value_share(), output);
  }

  // bytes mac_share = 3;
  if (this->mac_share().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->mac_share(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mpc.leath.ReconstructReply)
}

::google::protobuf::uint8* ReconstructReply::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mpc.leath.ReconstructReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 value_id = 1;
  if (this->value_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->value_id(), target);
  }

  // bytes value_share = 2;
  if (this->value_share().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value_share(), target);
  }

  // bytes mac_share = 3;
  if (this->mac_share().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->mac_share(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mpc.leath.ReconstructReply)
  return target;
}

size_t ReconstructReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mpc.leath.ReconstructReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes value_share = 2;
  if (this->value_share().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value_share());
  }

  // bytes mac_share = 3;
  if (this->mac_share().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mac_share());
  }

  // uint64 value_id = 1;
  if (this->value_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->value_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReconstructReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mpc.leath.ReconstructReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ReconstructReply* source =
      ::google::protobuf::DynamicCastToGenerated<ReconstructReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mpc.leath.ReconstructReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mpc.leath.ReconstructReply)
    MergeFrom(*source);
  }
}

void ReconstructReply::MergeFrom(const ReconstructReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mpc.leath.ReconstructReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value_share().size() > 0) {

    value_share_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_share_);
  }
  if (from.mac_share().size() > 0) {

    mac_share_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_share_);
  }
  if (from.value_id() != 0) {
    set_value_id(from.value_id());
  }
}

void ReconstructReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mpc.leath.ReconstructReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReconstructReply::CopyFrom(const ReconstructReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mpc.leath.ReconstructReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReconstructReply::IsInitialized() const {
  return true;
}

void ReconstructReply::Swap(ReconstructReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReconstructReply::InternalSwap(ReconstructReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  value_share_.Swap(&other->value_share_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mac_share_.Swap(&other->mac_share_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_id_, other->value_id_);
}

::google::protobuf::Metadata ReconstructReply::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_leath_2eproto);
  return ::file_level_metadata_leath_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace leath
}  // namespace mpc
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::mpc::leath::SetupMessage* Arena::CreateMaybeMessage< ::mpc::leath::SetupMessage >(Arena* arena) {
  return Arena::CreateInternal< ::mpc::leath::SetupMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::mpc::leath::ShareRequestMessage* Arena::CreateMaybeMessage< ::mpc::leath::ShareRequestMessage >(Arena* arena) {
  return Arena::CreateInternal< ::mpc::leath::ShareRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::mpc::leath::SearchReply* Arena::CreateMaybeMessage< ::mpc::leath::SearchReply >(Arena* arena) {
  return Arena::CreateInternal< ::mpc::leath::SearchReply >(arena);
}
template<> PROTOBUF_NOINLINE ::mpc::leath::ReconstructRequestMessage* Arena::CreateMaybeMessage< ::mpc::leath::ReconstructRequestMessage >(Arena* arena) {
  return Arena::CreateInternal< ::mpc::leath::ReconstructRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::mpc::leath::ReconstructReply* Arena::CreateMaybeMessage< ::mpc::leath::ReconstructReply >(Arena* arena) {
  return Arena::CreateInternal< ::mpc::leath::ReconstructReply >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
