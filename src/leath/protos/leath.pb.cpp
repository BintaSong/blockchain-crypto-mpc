// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: leath.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "leath.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mpc {
namespace leath {

namespace {

const ::google::protobuf::Descriptor* SetupMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetupMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShareRequestMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShareRequestMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReconstructRequestMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReconstructRequestMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReconstructReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReconstructReply_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_leath_2eproto() {
  protobuf_AddDesc_leath_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "leath.proto");
  GOOGLE_CHECK(file != NULL);
  SetupMessage_descriptor_ = file->message_type(0);
  static const int SetupMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupMessage, msg_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupMessage, msg_),
  };
  SetupMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SetupMessage_descriptor_,
      SetupMessage::default_instance_,
      SetupMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(SetupMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetupMessage, _is_default_instance_));
  ShareRequestMessage_descriptor_ = file->message_type(1);
  static const int ShareRequestMessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareRequestMessage, value_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareRequestMessage, value_share_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareRequestMessage, mac_share_),
  };
  ShareRequestMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ShareRequestMessage_descriptor_,
      ShareRequestMessage::default_instance_,
      ShareRequestMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(ShareRequestMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareRequestMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareRequestMessage, _is_default_instance_));
  ReconstructRequestMessage_descriptor_ = file->message_type(2);
  static const int ReconstructRequestMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconstructRequestMessage, value_id_),
  };
  ReconstructRequestMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReconstructRequestMessage_descriptor_,
      ReconstructRequestMessage::default_instance_,
      ReconstructRequestMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReconstructRequestMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconstructRequestMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconstructRequestMessage, _is_default_instance_));
  ReconstructReply_descriptor_ = file->message_type(3);
  static const int ReconstructReply_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconstructReply, value_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconstructReply, value_share_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconstructReply, mac_share_),
  };
  ReconstructReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReconstructReply_descriptor_,
      ReconstructReply::default_instance_,
      ReconstructReply_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReconstructReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconstructReply, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReconstructReply, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_leath_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SetupMessage_descriptor_, &SetupMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ShareRequestMessage_descriptor_, &ShareRequestMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReconstructRequestMessage_descriptor_, &ReconstructRequestMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReconstructReply_descriptor_, &ReconstructReply::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_leath_2eproto() {
  delete SetupMessage::default_instance_;
  delete SetupMessage_reflection_;
  delete ShareRequestMessage::default_instance_;
  delete ShareRequestMessage_reflection_;
  delete ReconstructRequestMessage::default_instance_;
  delete ReconstructRequestMessage_reflection_;
  delete ReconstructReply::default_instance_;
  delete ReconstructReply_reflection_;
}

void protobuf_AddDesc_leath_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fempty_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013leath.proto\022\tmpc.leath\032\033google/protobu"
    "f/empty.proto\"+\n\014SetupMessage\022\016\n\006msg_id\030"
    "\001 \001(\004\022\013\n\003msg\030\002 \001(\014\"O\n\023ShareRequestMessag"
    "e\022\020\n\010value_id\030\001 \001(\004\022\023\n\013value_share\030\002 \001(\014"
    "\022\021\n\tmac_share\030\003 \001(\014\"-\n\031ReconstructReques"
    "tMessage\022\020\n\010value_id\030\001 \001(\004\"L\n\020Reconstruc"
    "tReply\022\020\n\010value_id\030\001 \001(\004\022\023\n\013value_share\030"
    "\002 \001(\014\022\021\n\tmac_share\030\003 \001(\0142\207\003\n\010LeathRPC\022;\n"
    "\005setup\022\027.mpc.leath.SetupMessage\032\027.mpc.le"
    "ath.SetupMessage\"\000\022A\n\005share\022\036.mpc.leath."
    "ShareRequestMessage\032\026.google.protobuf.Em"
    "pty\"\000\022I\n\013batch_share\022\036.mpc.leath.ShareRe"
    "questMessage\032\026.google.protobuf.Empty\"\000(\001"
    "\022R\n\013reconstruct\022$.mpc.leath.ReconstructR"
    "equestMessage\032\033.mpc.leath.ReconstructRep"
    "ly\"\000\022\\\n\021batch_reconstruct\022$.mpc.leath.Re"
    "constructRequestMessage\032\033.mpc.leath.Reco"
    "nstructReply\"\000(\0010\001b\006proto3", 706);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "leath.proto", &protobuf_RegisterTypes);
  SetupMessage::default_instance_ = new SetupMessage();
  ShareRequestMessage::default_instance_ = new ShareRequestMessage();
  ReconstructRequestMessage::default_instance_ = new ReconstructRequestMessage();
  ReconstructReply::default_instance_ = new ReconstructReply();
  SetupMessage::default_instance_->InitAsDefaultInstance();
  ShareRequestMessage::default_instance_->InitAsDefaultInstance();
  ReconstructRequestMessage::default_instance_->InitAsDefaultInstance();
  ReconstructReply::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_leath_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_leath_2eproto {
  StaticDescriptorInitializer_leath_2eproto() {
    protobuf_AddDesc_leath_2eproto();
  }
} static_descriptor_initializer_leath_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetupMessage::kMsgIdFieldNumber;
const int SetupMessage::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetupMessage::SetupMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mpc.leath.SetupMessage)
}

void SetupMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SetupMessage::SetupMessage(const SetupMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mpc.leath.SetupMessage)
}

void SetupMessage::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msg_id_ = GOOGLE_ULONGLONG(0);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SetupMessage::~SetupMessage() {
  // @@protoc_insertion_point(destructor:mpc.leath.SetupMessage)
  SharedDtor();
}

void SetupMessage::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SetupMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetupMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetupMessage_descriptor_;
}

const SetupMessage& SetupMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_leath_2eproto();
  return *default_instance_;
}

SetupMessage* SetupMessage::default_instance_ = NULL;

SetupMessage* SetupMessage::New(::google::protobuf::Arena* arena) const {
  SetupMessage* n = new SetupMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetupMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:mpc.leath.SetupMessage)
  msg_id_ = GOOGLE_ULONGLONG(0);
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SetupMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mpc.leath.SetupMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 msg_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msg_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg;
        break;
      }

      // optional bytes msg = 2;
      case 2: {
        if (tag == 18) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mpc.leath.SetupMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mpc.leath.SetupMessage)
  return false;
#undef DO_
}

void SetupMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mpc.leath.SetupMessage)
  // optional uint64 msg_id = 1;
  if (this->msg_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->msg_id(), output);
  }

  // optional bytes msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->msg(), output);
  }

  // @@protoc_insertion_point(serialize_end:mpc.leath.SetupMessage)
}

::google::protobuf::uint8* SetupMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mpc.leath.SetupMessage)
  // optional uint64 msg_id = 1;
  if (this->msg_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->msg_id(), target);
  }

  // optional bytes msg = 2;
  if (this->msg().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->msg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mpc.leath.SetupMessage)
  return target;
}

int SetupMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mpc.leath.SetupMessage)
  int total_size = 0;

  // optional uint64 msg_id = 1;
  if (this->msg_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msg_id());
  }

  // optional bytes msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msg());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetupMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mpc.leath.SetupMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SetupMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SetupMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mpc.leath.SetupMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mpc.leath.SetupMessage)
    MergeFrom(*source);
  }
}

void SetupMessage::MergeFrom(const SetupMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mpc.leath.SetupMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.msg_id() != 0) {
    set_msg_id(from.msg_id());
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void SetupMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mpc.leath.SetupMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetupMessage::CopyFrom(const SetupMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mpc.leath.SetupMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupMessage::IsInitialized() const {

  return true;
}

void SetupMessage::Swap(SetupMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetupMessage::InternalSwap(SetupMessage* other) {
  std::swap(msg_id_, other->msg_id_);
  msg_.Swap(&other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetupMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetupMessage_descriptor_;
  metadata.reflection = SetupMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetupMessage

// optional uint64 msg_id = 1;
void SetupMessage::clear_msg_id() {
  msg_id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 SetupMessage::msg_id() const {
  // @@protoc_insertion_point(field_get:mpc.leath.SetupMessage.msg_id)
  return msg_id_;
}
 void SetupMessage::set_msg_id(::google::protobuf::uint64 value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:mpc.leath.SetupMessage.msg_id)
}

// optional bytes msg = 2;
void SetupMessage::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SetupMessage::msg() const {
  // @@protoc_insertion_point(field_get:mpc.leath.SetupMessage.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SetupMessage::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mpc.leath.SetupMessage.msg)
}
 void SetupMessage::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mpc.leath.SetupMessage.msg)
}
 void SetupMessage::set_msg(const void* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mpc.leath.SetupMessage.msg)
}
 ::std::string* SetupMessage::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:mpc.leath.SetupMessage.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SetupMessage::release_msg() {
  // @@protoc_insertion_point(field_release:mpc.leath.SetupMessage.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SetupMessage::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:mpc.leath.SetupMessage.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShareRequestMessage::kValueIdFieldNumber;
const int ShareRequestMessage::kValueShareFieldNumber;
const int ShareRequestMessage::kMacShareFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShareRequestMessage::ShareRequestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mpc.leath.ShareRequestMessage)
}

void ShareRequestMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ShareRequestMessage::ShareRequestMessage(const ShareRequestMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mpc.leath.ShareRequestMessage)
}

void ShareRequestMessage::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  value_id_ = GOOGLE_ULONGLONG(0);
  value_share_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_share_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ShareRequestMessage::~ShareRequestMessage() {
  // @@protoc_insertion_point(destructor:mpc.leath.ShareRequestMessage)
  SharedDtor();
}

void ShareRequestMessage::SharedDtor() {
  value_share_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_share_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ShareRequestMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShareRequestMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShareRequestMessage_descriptor_;
}

const ShareRequestMessage& ShareRequestMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_leath_2eproto();
  return *default_instance_;
}

ShareRequestMessage* ShareRequestMessage::default_instance_ = NULL;

ShareRequestMessage* ShareRequestMessage::New(::google::protobuf::Arena* arena) const {
  ShareRequestMessage* n = new ShareRequestMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShareRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:mpc.leath.ShareRequestMessage)
  value_id_ = GOOGLE_ULONGLONG(0);
  value_share_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_share_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ShareRequestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mpc.leath.ShareRequestMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 value_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value_share;
        break;
      }

      // optional bytes value_share = 2;
      case 2: {
        if (tag == 18) {
         parse_value_share:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value_share()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_mac_share;
        break;
      }

      // optional bytes mac_share = 3;
      case 3: {
        if (tag == 26) {
         parse_mac_share:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mac_share()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mpc.leath.ShareRequestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mpc.leath.ShareRequestMessage)
  return false;
#undef DO_
}

void ShareRequestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mpc.leath.ShareRequestMessage)
  // optional uint64 value_id = 1;
  if (this->value_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->value_id(), output);
  }

  // optional bytes value_share = 2;
  if (this->value_share().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value_share(), output);
  }

  // optional bytes mac_share = 3;
  if (this->mac_share().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->mac_share(), output);
  }

  // @@protoc_insertion_point(serialize_end:mpc.leath.ShareRequestMessage)
}

::google::protobuf::uint8* ShareRequestMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mpc.leath.ShareRequestMessage)
  // optional uint64 value_id = 1;
  if (this->value_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->value_id(), target);
  }

  // optional bytes value_share = 2;
  if (this->value_share().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value_share(), target);
  }

  // optional bytes mac_share = 3;
  if (this->mac_share().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->mac_share(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mpc.leath.ShareRequestMessage)
  return target;
}

int ShareRequestMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mpc.leath.ShareRequestMessage)
  int total_size = 0;

  // optional uint64 value_id = 1;
  if (this->value_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->value_id());
  }

  // optional bytes value_share = 2;
  if (this->value_share().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value_share());
  }

  // optional bytes mac_share = 3;
  if (this->mac_share().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mac_share());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShareRequestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mpc.leath.ShareRequestMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ShareRequestMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ShareRequestMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mpc.leath.ShareRequestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mpc.leath.ShareRequestMessage)
    MergeFrom(*source);
  }
}

void ShareRequestMessage::MergeFrom(const ShareRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mpc.leath.ShareRequestMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.value_id() != 0) {
    set_value_id(from.value_id());
  }
  if (from.value_share().size() > 0) {

    value_share_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_share_);
  }
  if (from.mac_share().size() > 0) {

    mac_share_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_share_);
  }
}

void ShareRequestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mpc.leath.ShareRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShareRequestMessage::CopyFrom(const ShareRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mpc.leath.ShareRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareRequestMessage::IsInitialized() const {

  return true;
}

void ShareRequestMessage::Swap(ShareRequestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShareRequestMessage::InternalSwap(ShareRequestMessage* other) {
  std::swap(value_id_, other->value_id_);
  value_share_.Swap(&other->value_share_);
  mac_share_.Swap(&other->mac_share_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShareRequestMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShareRequestMessage_descriptor_;
  metadata.reflection = ShareRequestMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShareRequestMessage

// optional uint64 value_id = 1;
void ShareRequestMessage::clear_value_id() {
  value_id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 ShareRequestMessage::value_id() const {
  // @@protoc_insertion_point(field_get:mpc.leath.ShareRequestMessage.value_id)
  return value_id_;
}
 void ShareRequestMessage::set_value_id(::google::protobuf::uint64 value) {
  
  value_id_ = value;
  // @@protoc_insertion_point(field_set:mpc.leath.ShareRequestMessage.value_id)
}

// optional bytes value_share = 2;
void ShareRequestMessage::clear_value_share() {
  value_share_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ShareRequestMessage::value_share() const {
  // @@protoc_insertion_point(field_get:mpc.leath.ShareRequestMessage.value_share)
  return value_share_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ShareRequestMessage::set_value_share(const ::std::string& value) {
  
  value_share_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mpc.leath.ShareRequestMessage.value_share)
}
 void ShareRequestMessage::set_value_share(const char* value) {
  
  value_share_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mpc.leath.ShareRequestMessage.value_share)
}
 void ShareRequestMessage::set_value_share(const void* value, size_t size) {
  
  value_share_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mpc.leath.ShareRequestMessage.value_share)
}
 ::std::string* ShareRequestMessage::mutable_value_share() {
  
  // @@protoc_insertion_point(field_mutable:mpc.leath.ShareRequestMessage.value_share)
  return value_share_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ShareRequestMessage::release_value_share() {
  // @@protoc_insertion_point(field_release:mpc.leath.ShareRequestMessage.value_share)
  
  return value_share_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ShareRequestMessage::set_allocated_value_share(::std::string* value_share) {
  if (value_share != NULL) {
    
  } else {
    
  }
  value_share_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value_share);
  // @@protoc_insertion_point(field_set_allocated:mpc.leath.ShareRequestMessage.value_share)
}

// optional bytes mac_share = 3;
void ShareRequestMessage::clear_mac_share() {
  mac_share_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ShareRequestMessage::mac_share() const {
  // @@protoc_insertion_point(field_get:mpc.leath.ShareRequestMessage.mac_share)
  return mac_share_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ShareRequestMessage::set_mac_share(const ::std::string& value) {
  
  mac_share_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mpc.leath.ShareRequestMessage.mac_share)
}
 void ShareRequestMessage::set_mac_share(const char* value) {
  
  mac_share_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mpc.leath.ShareRequestMessage.mac_share)
}
 void ShareRequestMessage::set_mac_share(const void* value, size_t size) {
  
  mac_share_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mpc.leath.ShareRequestMessage.mac_share)
}
 ::std::string* ShareRequestMessage::mutable_mac_share() {
  
  // @@protoc_insertion_point(field_mutable:mpc.leath.ShareRequestMessage.mac_share)
  return mac_share_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ShareRequestMessage::release_mac_share() {
  // @@protoc_insertion_point(field_release:mpc.leath.ShareRequestMessage.mac_share)
  
  return mac_share_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ShareRequestMessage::set_allocated_mac_share(::std::string* mac_share) {
  if (mac_share != NULL) {
    
  } else {
    
  }
  mac_share_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac_share);
  // @@protoc_insertion_point(field_set_allocated:mpc.leath.ShareRequestMessage.mac_share)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReconstructRequestMessage::kValueIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReconstructRequestMessage::ReconstructRequestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mpc.leath.ReconstructRequestMessage)
}

void ReconstructRequestMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ReconstructRequestMessage::ReconstructRequestMessage(const ReconstructRequestMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mpc.leath.ReconstructRequestMessage)
}

void ReconstructRequestMessage::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  value_id_ = GOOGLE_ULONGLONG(0);
}

ReconstructRequestMessage::~ReconstructRequestMessage() {
  // @@protoc_insertion_point(destructor:mpc.leath.ReconstructRequestMessage)
  SharedDtor();
}

void ReconstructRequestMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReconstructRequestMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReconstructRequestMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReconstructRequestMessage_descriptor_;
}

const ReconstructRequestMessage& ReconstructRequestMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_leath_2eproto();
  return *default_instance_;
}

ReconstructRequestMessage* ReconstructRequestMessage::default_instance_ = NULL;

ReconstructRequestMessage* ReconstructRequestMessage::New(::google::protobuf::Arena* arena) const {
  ReconstructRequestMessage* n = new ReconstructRequestMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReconstructRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:mpc.leath.ReconstructRequestMessage)
  value_id_ = GOOGLE_ULONGLONG(0);
}

bool ReconstructRequestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mpc.leath.ReconstructRequestMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 value_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mpc.leath.ReconstructRequestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mpc.leath.ReconstructRequestMessage)
  return false;
#undef DO_
}

void ReconstructRequestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mpc.leath.ReconstructRequestMessage)
  // optional uint64 value_id = 1;
  if (this->value_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->value_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:mpc.leath.ReconstructRequestMessage)
}

::google::protobuf::uint8* ReconstructRequestMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mpc.leath.ReconstructRequestMessage)
  // optional uint64 value_id = 1;
  if (this->value_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->value_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mpc.leath.ReconstructRequestMessage)
  return target;
}

int ReconstructRequestMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mpc.leath.ReconstructRequestMessage)
  int total_size = 0;

  // optional uint64 value_id = 1;
  if (this->value_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->value_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReconstructRequestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mpc.leath.ReconstructRequestMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReconstructRequestMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReconstructRequestMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mpc.leath.ReconstructRequestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mpc.leath.ReconstructRequestMessage)
    MergeFrom(*source);
  }
}

void ReconstructRequestMessage::MergeFrom(const ReconstructRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mpc.leath.ReconstructRequestMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.value_id() != 0) {
    set_value_id(from.value_id());
  }
}

void ReconstructRequestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mpc.leath.ReconstructRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReconstructRequestMessage::CopyFrom(const ReconstructRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mpc.leath.ReconstructRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReconstructRequestMessage::IsInitialized() const {

  return true;
}

void ReconstructRequestMessage::Swap(ReconstructRequestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReconstructRequestMessage::InternalSwap(ReconstructRequestMessage* other) {
  std::swap(value_id_, other->value_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReconstructRequestMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReconstructRequestMessage_descriptor_;
  metadata.reflection = ReconstructRequestMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReconstructRequestMessage

// optional uint64 value_id = 1;
void ReconstructRequestMessage::clear_value_id() {
  value_id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 ReconstructRequestMessage::value_id() const {
  // @@protoc_insertion_point(field_get:mpc.leath.ReconstructRequestMessage.value_id)
  return value_id_;
}
 void ReconstructRequestMessage::set_value_id(::google::protobuf::uint64 value) {
  
  value_id_ = value;
  // @@protoc_insertion_point(field_set:mpc.leath.ReconstructRequestMessage.value_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReconstructReply::kValueIdFieldNumber;
const int ReconstructReply::kValueShareFieldNumber;
const int ReconstructReply::kMacShareFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReconstructReply::ReconstructReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mpc.leath.ReconstructReply)
}

void ReconstructReply::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ReconstructReply::ReconstructReply(const ReconstructReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mpc.leath.ReconstructReply)
}

void ReconstructReply::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  value_id_ = GOOGLE_ULONGLONG(0);
  value_share_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_share_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReconstructReply::~ReconstructReply() {
  // @@protoc_insertion_point(destructor:mpc.leath.ReconstructReply)
  SharedDtor();
}

void ReconstructReply::SharedDtor() {
  value_share_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_share_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ReconstructReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReconstructReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReconstructReply_descriptor_;
}

const ReconstructReply& ReconstructReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_leath_2eproto();
  return *default_instance_;
}

ReconstructReply* ReconstructReply::default_instance_ = NULL;

ReconstructReply* ReconstructReply::New(::google::protobuf::Arena* arena) const {
  ReconstructReply* n = new ReconstructReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReconstructReply::Clear() {
// @@protoc_insertion_point(message_clear_start:mpc.leath.ReconstructReply)
  value_id_ = GOOGLE_ULONGLONG(0);
  value_share_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_share_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ReconstructReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mpc.leath.ReconstructReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 value_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value_share;
        break;
      }

      // optional bytes value_share = 2;
      case 2: {
        if (tag == 18) {
         parse_value_share:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value_share()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_mac_share;
        break;
      }

      // optional bytes mac_share = 3;
      case 3: {
        if (tag == 26) {
         parse_mac_share:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mac_share()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mpc.leath.ReconstructReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mpc.leath.ReconstructReply)
  return false;
#undef DO_
}

void ReconstructReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mpc.leath.ReconstructReply)
  // optional uint64 value_id = 1;
  if (this->value_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->value_id(), output);
  }

  // optional bytes value_share = 2;
  if (this->value_share().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value_share(), output);
  }

  // optional bytes mac_share = 3;
  if (this->mac_share().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->mac_share(), output);
  }

  // @@protoc_insertion_point(serialize_end:mpc.leath.ReconstructReply)
}

::google::protobuf::uint8* ReconstructReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mpc.leath.ReconstructReply)
  // optional uint64 value_id = 1;
  if (this->value_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->value_id(), target);
  }

  // optional bytes value_share = 2;
  if (this->value_share().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value_share(), target);
  }

  // optional bytes mac_share = 3;
  if (this->mac_share().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->mac_share(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mpc.leath.ReconstructReply)
  return target;
}

int ReconstructReply::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mpc.leath.ReconstructReply)
  int total_size = 0;

  // optional uint64 value_id = 1;
  if (this->value_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->value_id());
  }

  // optional bytes value_share = 2;
  if (this->value_share().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value_share());
  }

  // optional bytes mac_share = 3;
  if (this->mac_share().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mac_share());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReconstructReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mpc.leath.ReconstructReply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReconstructReply* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReconstructReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mpc.leath.ReconstructReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mpc.leath.ReconstructReply)
    MergeFrom(*source);
  }
}

void ReconstructReply::MergeFrom(const ReconstructReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mpc.leath.ReconstructReply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.value_id() != 0) {
    set_value_id(from.value_id());
  }
  if (from.value_share().size() > 0) {

    value_share_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_share_);
  }
  if (from.mac_share().size() > 0) {

    mac_share_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_share_);
  }
}

void ReconstructReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mpc.leath.ReconstructReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReconstructReply::CopyFrom(const ReconstructReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mpc.leath.ReconstructReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReconstructReply::IsInitialized() const {

  return true;
}

void ReconstructReply::Swap(ReconstructReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReconstructReply::InternalSwap(ReconstructReply* other) {
  std::swap(value_id_, other->value_id_);
  value_share_.Swap(&other->value_share_);
  mac_share_.Swap(&other->mac_share_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReconstructReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReconstructReply_descriptor_;
  metadata.reflection = ReconstructReply_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReconstructReply

// optional uint64 value_id = 1;
void ReconstructReply::clear_value_id() {
  value_id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 ReconstructReply::value_id() const {
  // @@protoc_insertion_point(field_get:mpc.leath.ReconstructReply.value_id)
  return value_id_;
}
 void ReconstructReply::set_value_id(::google::protobuf::uint64 value) {
  
  value_id_ = value;
  // @@protoc_insertion_point(field_set:mpc.leath.ReconstructReply.value_id)
}

// optional bytes value_share = 2;
void ReconstructReply::clear_value_share() {
  value_share_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ReconstructReply::value_share() const {
  // @@protoc_insertion_point(field_get:mpc.leath.ReconstructReply.value_share)
  return value_share_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReconstructReply::set_value_share(const ::std::string& value) {
  
  value_share_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mpc.leath.ReconstructReply.value_share)
}
 void ReconstructReply::set_value_share(const char* value) {
  
  value_share_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mpc.leath.ReconstructReply.value_share)
}
 void ReconstructReply::set_value_share(const void* value, size_t size) {
  
  value_share_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mpc.leath.ReconstructReply.value_share)
}
 ::std::string* ReconstructReply::mutable_value_share() {
  
  // @@protoc_insertion_point(field_mutable:mpc.leath.ReconstructReply.value_share)
  return value_share_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ReconstructReply::release_value_share() {
  // @@protoc_insertion_point(field_release:mpc.leath.ReconstructReply.value_share)
  
  return value_share_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReconstructReply::set_allocated_value_share(::std::string* value_share) {
  if (value_share != NULL) {
    
  } else {
    
  }
  value_share_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value_share);
  // @@protoc_insertion_point(field_set_allocated:mpc.leath.ReconstructReply.value_share)
}

// optional bytes mac_share = 3;
void ReconstructReply::clear_mac_share() {
  mac_share_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ReconstructReply::mac_share() const {
  // @@protoc_insertion_point(field_get:mpc.leath.ReconstructReply.mac_share)
  return mac_share_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReconstructReply::set_mac_share(const ::std::string& value) {
  
  mac_share_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mpc.leath.ReconstructReply.mac_share)
}
 void ReconstructReply::set_mac_share(const char* value) {
  
  mac_share_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mpc.leath.ReconstructReply.mac_share)
}
 void ReconstructReply::set_mac_share(const void* value, size_t size) {
  
  mac_share_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mpc.leath.ReconstructReply.mac_share)
}
 ::std::string* ReconstructReply::mutable_mac_share() {
  
  // @@protoc_insertion_point(field_mutable:mpc.leath.ReconstructReply.mac_share)
  return mac_share_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ReconstructReply::release_mac_share() {
  // @@protoc_insertion_point(field_release:mpc.leath.ReconstructReply.mac_share)
  
  return mac_share_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReconstructReply::set_allocated_mac_share(::std::string* mac_share) {
  if (mac_share != NULL) {
    
  } else {
    
  }
  mac_share_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac_share);
  // @@protoc_insertion_point(field_set_allocated:mpc.leath.ReconstructReply.mac_share)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace leath
}  // namespace mpc

// @@protoc_insertion_point(global_scope)
