// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: leath.proto

#include "leath.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace mpc {
class SetupMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetupMessage>
      _instance;
} _SetupMessage_default_instance_;
class ShareRequestMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShareRequestMessage>
      _instance;
} _ShareRequestMessage_default_instance_;
class SearchReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchReply>
      _instance;
} _SearchReply_default_instance_;
class ReconstructRequestMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReconstructRequestMessage>
      _instance;
} _ReconstructRequestMessage_default_instance_;
class ReconstructReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReconstructReply>
      _instance;
} _ReconstructReply_default_instance_;
}  // namespace mpc
namespace protobuf_leath_2eproto {
void InitDefaultsSetupMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::mpc::_SetupMessage_default_instance_;
    new (ptr) ::mpc::SetupMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mpc::SetupMessage::InitAsDefaultInstance();
}

void InitDefaultsSetupMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSetupMessageImpl);
}

void InitDefaultsShareRequestMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::mpc::_ShareRequestMessage_default_instance_;
    new (ptr) ::mpc::ShareRequestMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mpc::ShareRequestMessage::InitAsDefaultInstance();
}

void InitDefaultsShareRequestMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsShareRequestMessageImpl);
}

void InitDefaultsSearchReplyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::mpc::_SearchReply_default_instance_;
    new (ptr) ::mpc::SearchReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mpc::SearchReply::InitAsDefaultInstance();
}

void InitDefaultsSearchReply() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSearchReplyImpl);
}

void InitDefaultsReconstructRequestMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::mpc::_ReconstructRequestMessage_default_instance_;
    new (ptr) ::mpc::ReconstructRequestMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mpc::ReconstructRequestMessage::InitAsDefaultInstance();
}

void InitDefaultsReconstructRequestMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReconstructRequestMessageImpl);
}

void InitDefaultsReconstructReplyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::mpc::_ReconstructReply_default_instance_;
    new (ptr) ::mpc::ReconstructReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mpc::ReconstructReply::InitAsDefaultInstance();
}

void InitDefaultsReconstructReply() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReconstructReplyImpl);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mpc::SetupMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mpc::SetupMessage, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mpc::SetupMessage, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mpc::ShareRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mpc::ShareRequestMessage, value_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mpc::ShareRequestMessage, value_share_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mpc::ShareRequestMessage, mac_share_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mpc::SearchReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mpc::SearchReply, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mpc::ReconstructRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mpc::ReconstructRequestMessage, value_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mpc::ReconstructReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mpc::ReconstructReply, value_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mpc::ReconstructReply, value_share_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mpc::ReconstructReply, mac_share_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mpc::SetupMessage)},
  { 7, -1, sizeof(::mpc::ShareRequestMessage)},
  { 15, -1, sizeof(::mpc::SearchReply)},
  { 21, -1, sizeof(::mpc::ReconstructRequestMessage)},
  { 27, -1, sizeof(::mpc::ReconstructReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::mpc::_SetupMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mpc::_ShareRequestMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mpc::_SearchReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mpc::_ReconstructRequestMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mpc::_ReconstructReply_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "leath.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013leath.proto\022\003mpc\032\033google/protobuf/empt"
      "y.proto\"+\n\014SetupMessage\022\016\n\006msg_id\030\001 \001(\004\022"
      "\013\n\003msg\030\002 \001(\014\"O\n\023ShareRequestMessage\022\020\n\010v"
      "alue_id\030\001 \001(\004\022\023\n\013value_share\030\002 \001(\014\022\021\n\tma"
      "c_share\030\003 \001(\014\"\035\n\013SearchReply\022\016\n\006result\030\001"
      " \001(\014\"-\n\031ReconstructRequestMessage\022\020\n\010val"
      "ue_id\030\001 \001(\004\"L\n\020ReconstructReply\022\020\n\010value"
      "_id\030\001 \001(\004\022\023\n\013value_share\030\002 \001(\014\022\021\n\tmac_sh"
      "are\030\003 \001(\0142\323\002\n\005Leath\022/\n\005setup\022\021.mpc.Setup"
      "Message\032\021.mpc.SetupMessage\"\000\022;\n\005share\022\030."
      "mpc.ShareRequestMessage\032\026.google.protobu"
      "f.Empty\"\000\022C\n\013batch_share\022\030.mpc.ShareRequ"
      "estMessage\032\026.google.protobuf.Empty\"\000(\001\022F"
      "\n\013reconstruct\022\036.mpc.ReconstructRequestMe"
      "ssage\032\025.mpc.ReconstructReply\"\000\022O\n\020bulk_r"
      "econstruct\022\036.mpc.ReconstructRequestMessa"
      "ge\032\025.mpc.ReconstructReply\"\000(\0010\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 679);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "leath.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_leath_2eproto
namespace mpc {

// ===================================================================

void SetupMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetupMessage::kMsgIdFieldNumber;
const int SetupMessage::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetupMessage::SetupMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_leath_2eproto::InitDefaultsSetupMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mpc.SetupMessage)
}
SetupMessage::SetupMessage(const SetupMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  msg_id_ = from.msg_id_;
  // @@protoc_insertion_point(copy_constructor:mpc.SetupMessage)
}

void SetupMessage::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

SetupMessage::~SetupMessage() {
  // @@protoc_insertion_point(destructor:mpc.SetupMessage)
  SharedDtor();
}

void SetupMessage::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetupMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetupMessage::descriptor() {
  ::protobuf_leath_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_leath_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetupMessage& SetupMessage::default_instance() {
  ::protobuf_leath_2eproto::InitDefaultsSetupMessage();
  return *internal_default_instance();
}

SetupMessage* SetupMessage::New(::google::protobuf::Arena* arena) const {
  SetupMessage* n = new SetupMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetupMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:mpc.SetupMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool SetupMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mpc.SetupMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 msg_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &msg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mpc.SetupMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mpc.SetupMessage)
  return false;
#undef DO_
}

void SetupMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mpc.SetupMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 msg_id = 1;
  if (this->msg_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->msg_id(), output);
  }

  // bytes msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mpc.SetupMessage)
}

::google::protobuf::uint8* SetupMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mpc.SetupMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 msg_id = 1;
  if (this->msg_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->msg_id(), target);
  }

  // bytes msg = 2;
  if (this->msg().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mpc.SetupMessage)
  return target;
}

size_t SetupMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mpc.SetupMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msg());
  }

  // uint64 msg_id = 1;
  if (this->msg_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetupMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mpc.SetupMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SetupMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetupMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mpc.SetupMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mpc.SetupMessage)
    MergeFrom(*source);
  }
}

void SetupMessage::MergeFrom(const SetupMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mpc.SetupMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.msg_id() != 0) {
    set_msg_id(from.msg_id());
  }
}

void SetupMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mpc.SetupMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetupMessage::CopyFrom(const SetupMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mpc.SetupMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupMessage::IsInitialized() const {
  return true;
}

void SetupMessage::Swap(SetupMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetupMessage::InternalSwap(SetupMessage* other) {
  using std::swap;
  msg_.Swap(&other->msg_);
  swap(msg_id_, other->msg_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetupMessage::GetMetadata() const {
  protobuf_leath_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_leath_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShareRequestMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShareRequestMessage::kValueIdFieldNumber;
const int ShareRequestMessage::kValueShareFieldNumber;
const int ShareRequestMessage::kMacShareFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShareRequestMessage::ShareRequestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_leath_2eproto::InitDefaultsShareRequestMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mpc.ShareRequestMessage)
}
ShareRequestMessage::ShareRequestMessage(const ShareRequestMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_share_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value_share().size() > 0) {
    value_share_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_share_);
  }
  mac_share_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mac_share().size() > 0) {
    mac_share_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_share_);
  }
  value_id_ = from.value_id_;
  // @@protoc_insertion_point(copy_constructor:mpc.ShareRequestMessage)
}

void ShareRequestMessage::SharedCtor() {
  value_share_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_share_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

ShareRequestMessage::~ShareRequestMessage() {
  // @@protoc_insertion_point(destructor:mpc.ShareRequestMessage)
  SharedDtor();
}

void ShareRequestMessage::SharedDtor() {
  value_share_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_share_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShareRequestMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShareRequestMessage::descriptor() {
  ::protobuf_leath_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_leath_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShareRequestMessage& ShareRequestMessage::default_instance() {
  ::protobuf_leath_2eproto::InitDefaultsShareRequestMessage();
  return *internal_default_instance();
}

ShareRequestMessage* ShareRequestMessage::New(::google::protobuf::Arena* arena) const {
  ShareRequestMessage* n = new ShareRequestMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShareRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:mpc.ShareRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_share_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_share_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool ShareRequestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mpc.ShareRequestMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 value_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value_share = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value_share()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes mac_share = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mac_share()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mpc.ShareRequestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mpc.ShareRequestMessage)
  return false;
#undef DO_
}

void ShareRequestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mpc.ShareRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 value_id = 1;
  if (this->value_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->value_id(), output);
  }

  // bytes value_share = 2;
  if (this->value_share().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value_share(), output);
  }

  // bytes mac_share = 3;
  if (this->mac_share().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->mac_share(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mpc.ShareRequestMessage)
}

::google::protobuf::uint8* ShareRequestMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mpc.ShareRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 value_id = 1;
  if (this->value_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->value_id(), target);
  }

  // bytes value_share = 2;
  if (this->value_share().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value_share(), target);
  }

  // bytes mac_share = 3;
  if (this->mac_share().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->mac_share(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mpc.ShareRequestMessage)
  return target;
}

size_t ShareRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mpc.ShareRequestMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value_share = 2;
  if (this->value_share().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value_share());
  }

  // bytes mac_share = 3;
  if (this->mac_share().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mac_share());
  }

  // uint64 value_id = 1;
  if (this->value_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->value_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShareRequestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mpc.ShareRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ShareRequestMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShareRequestMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mpc.ShareRequestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mpc.ShareRequestMessage)
    MergeFrom(*source);
  }
}

void ShareRequestMessage::MergeFrom(const ShareRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mpc.ShareRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value_share().size() > 0) {

    value_share_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_share_);
  }
  if (from.mac_share().size() > 0) {

    mac_share_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_share_);
  }
  if (from.value_id() != 0) {
    set_value_id(from.value_id());
  }
}

void ShareRequestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mpc.ShareRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShareRequestMessage::CopyFrom(const ShareRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mpc.ShareRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareRequestMessage::IsInitialized() const {
  return true;
}

void ShareRequestMessage::Swap(ShareRequestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShareRequestMessage::InternalSwap(ShareRequestMessage* other) {
  using std::swap;
  value_share_.Swap(&other->value_share_);
  mac_share_.Swap(&other->mac_share_);
  swap(value_id_, other->value_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShareRequestMessage::GetMetadata() const {
  protobuf_leath_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_leath_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchReply::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchReply::SearchReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_leath_2eproto::InitDefaultsSearchReply();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mpc.SearchReply)
}
SearchReply::SearchReply(const SearchReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.result().size() > 0) {
    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  // @@protoc_insertion_point(copy_constructor:mpc.SearchReply)
}

void SearchReply::SharedCtor() {
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SearchReply::~SearchReply() {
  // @@protoc_insertion_point(destructor:mpc.SearchReply)
  SharedDtor();
}

void SearchReply::SharedDtor() {
  result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SearchReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SearchReply::descriptor() {
  ::protobuf_leath_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_leath_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchReply& SearchReply::default_instance() {
  ::protobuf_leath_2eproto::InitDefaultsSearchReply();
  return *internal_default_instance();
}

SearchReply* SearchReply::New(::google::protobuf::Arena* arena) const {
  SearchReply* n = new SearchReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SearchReply::Clear() {
// @@protoc_insertion_point(message_clear_start:mpc.SearchReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SearchReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mpc.SearchReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mpc.SearchReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mpc.SearchReply)
  return false;
#undef DO_
}

void SearchReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mpc.SearchReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes result = 1;
  if (this->result().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mpc.SearchReply)
}

::google::protobuf::uint8* SearchReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mpc.SearchReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes result = 1;
  if (this->result().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mpc.SearchReply)
  return target;
}

size_t SearchReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mpc.SearchReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SearchReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mpc.SearchReply)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mpc.SearchReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mpc.SearchReply)
    MergeFrom(*source);
  }
}

void SearchReply::MergeFrom(const SearchReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mpc.SearchReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {

    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
}

void SearchReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mpc.SearchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchReply::CopyFrom(const SearchReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mpc.SearchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchReply::IsInitialized() const {
  return true;
}

void SearchReply::Swap(SearchReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchReply::InternalSwap(SearchReply* other) {
  using std::swap;
  result_.Swap(&other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SearchReply::GetMetadata() const {
  protobuf_leath_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_leath_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReconstructRequestMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReconstructRequestMessage::kValueIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReconstructRequestMessage::ReconstructRequestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_leath_2eproto::InitDefaultsReconstructRequestMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mpc.ReconstructRequestMessage)
}
ReconstructRequestMessage::ReconstructRequestMessage(const ReconstructRequestMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_id_ = from.value_id_;
  // @@protoc_insertion_point(copy_constructor:mpc.ReconstructRequestMessage)
}

void ReconstructRequestMessage::SharedCtor() {
  value_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

ReconstructRequestMessage::~ReconstructRequestMessage() {
  // @@protoc_insertion_point(destructor:mpc.ReconstructRequestMessage)
  SharedDtor();
}

void ReconstructRequestMessage::SharedDtor() {
}

void ReconstructRequestMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReconstructRequestMessage::descriptor() {
  ::protobuf_leath_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_leath_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReconstructRequestMessage& ReconstructRequestMessage::default_instance() {
  ::protobuf_leath_2eproto::InitDefaultsReconstructRequestMessage();
  return *internal_default_instance();
}

ReconstructRequestMessage* ReconstructRequestMessage::New(::google::protobuf::Arena* arena) const {
  ReconstructRequestMessage* n = new ReconstructRequestMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReconstructRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:mpc.ReconstructRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool ReconstructRequestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mpc.ReconstructRequestMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 value_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mpc.ReconstructRequestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mpc.ReconstructRequestMessage)
  return false;
#undef DO_
}

void ReconstructRequestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mpc.ReconstructRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 value_id = 1;
  if (this->value_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->value_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mpc.ReconstructRequestMessage)
}

::google::protobuf::uint8* ReconstructRequestMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mpc.ReconstructRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 value_id = 1;
  if (this->value_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->value_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mpc.ReconstructRequestMessage)
  return target;
}

size_t ReconstructRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mpc.ReconstructRequestMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 value_id = 1;
  if (this->value_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->value_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReconstructRequestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mpc.ReconstructRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ReconstructRequestMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReconstructRequestMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mpc.ReconstructRequestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mpc.ReconstructRequestMessage)
    MergeFrom(*source);
  }
}

void ReconstructRequestMessage::MergeFrom(const ReconstructRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mpc.ReconstructRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value_id() != 0) {
    set_value_id(from.value_id());
  }
}

void ReconstructRequestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mpc.ReconstructRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReconstructRequestMessage::CopyFrom(const ReconstructRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mpc.ReconstructRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReconstructRequestMessage::IsInitialized() const {
  return true;
}

void ReconstructRequestMessage::Swap(ReconstructRequestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReconstructRequestMessage::InternalSwap(ReconstructRequestMessage* other) {
  using std::swap;
  swap(value_id_, other->value_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReconstructRequestMessage::GetMetadata() const {
  protobuf_leath_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_leath_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReconstructReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReconstructReply::kValueIdFieldNumber;
const int ReconstructReply::kValueShareFieldNumber;
const int ReconstructReply::kMacShareFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReconstructReply::ReconstructReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_leath_2eproto::InitDefaultsReconstructReply();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mpc.ReconstructReply)
}
ReconstructReply::ReconstructReply(const ReconstructReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_share_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value_share().size() > 0) {
    value_share_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_share_);
  }
  mac_share_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mac_share().size() > 0) {
    mac_share_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_share_);
  }
  value_id_ = from.value_id_;
  // @@protoc_insertion_point(copy_constructor:mpc.ReconstructReply)
}

void ReconstructReply::SharedCtor() {
  value_share_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_share_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

ReconstructReply::~ReconstructReply() {
  // @@protoc_insertion_point(destructor:mpc.ReconstructReply)
  SharedDtor();
}

void ReconstructReply::SharedDtor() {
  value_share_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_share_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReconstructReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReconstructReply::descriptor() {
  ::protobuf_leath_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_leath_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReconstructReply& ReconstructReply::default_instance() {
  ::protobuf_leath_2eproto::InitDefaultsReconstructReply();
  return *internal_default_instance();
}

ReconstructReply* ReconstructReply::New(::google::protobuf::Arena* arena) const {
  ReconstructReply* n = new ReconstructReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReconstructReply::Clear() {
// @@protoc_insertion_point(message_clear_start:mpc.ReconstructReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_share_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_share_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool ReconstructReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mpc.ReconstructReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 value_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value_share = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value_share()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes mac_share = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mac_share()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mpc.ReconstructReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mpc.ReconstructReply)
  return false;
#undef DO_
}

void ReconstructReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mpc.ReconstructReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 value_id = 1;
  if (this->value_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->value_id(), output);
  }

  // bytes value_share = 2;
  if (this->value_share().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value_share(), output);
  }

  // bytes mac_share = 3;
  if (this->mac_share().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->mac_share(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mpc.ReconstructReply)
}

::google::protobuf::uint8* ReconstructReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mpc.ReconstructReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 value_id = 1;
  if (this->value_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->value_id(), target);
  }

  // bytes value_share = 2;
  if (this->value_share().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value_share(), target);
  }

  // bytes mac_share = 3;
  if (this->mac_share().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->mac_share(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mpc.ReconstructReply)
  return target;
}

size_t ReconstructReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mpc.ReconstructReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value_share = 2;
  if (this->value_share().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value_share());
  }

  // bytes mac_share = 3;
  if (this->mac_share().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mac_share());
  }

  // uint64 value_id = 1;
  if (this->value_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->value_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReconstructReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mpc.ReconstructReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ReconstructReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReconstructReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mpc.ReconstructReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mpc.ReconstructReply)
    MergeFrom(*source);
  }
}

void ReconstructReply::MergeFrom(const ReconstructReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mpc.ReconstructReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value_share().size() > 0) {

    value_share_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_share_);
  }
  if (from.mac_share().size() > 0) {

    mac_share_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_share_);
  }
  if (from.value_id() != 0) {
    set_value_id(from.value_id());
  }
}

void ReconstructReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mpc.ReconstructReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReconstructReply::CopyFrom(const ReconstructReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mpc.ReconstructReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReconstructReply::IsInitialized() const {
  return true;
}

void ReconstructReply::Swap(ReconstructReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReconstructReply::InternalSwap(ReconstructReply* other) {
  using std::swap;
  value_share_.Swap(&other->value_share_);
  mac_share_.Swap(&other->mac_share_);
  swap(value_id_, other->value_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReconstructReply::GetMetadata() const {
  protobuf_leath_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_leath_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace mpc

// @@protoc_insertion_point(global_scope)
